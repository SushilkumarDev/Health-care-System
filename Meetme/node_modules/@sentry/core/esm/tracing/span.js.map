{"version":3,"file":"span.js","sources":["../../../src/tracing/span.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type {\n  Instrumenter,\n  Primitive,\n  Span as SpanInterface,\n  SpanAttributeValue,\n  SpanAttributes,\n  SpanContext,\n  SpanOrigin,\n  TraceContext,\n  Transaction,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { spanToTraceContext, spanToTraceHeader } from '../utils/spanUtils';\nimport { ensureTimestampInSeconds } from './utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * @inheritDoc\n   */\n  public traceId: string;\n\n  /**\n   * @inheritDoc\n   */\n  public spanId: string;\n\n  /**\n   * @inheritDoc\n   */\n  public parentSpanId?: string;\n\n  /**\n   * Internal keeper of the status\n   */\n  public status?: SpanStatusType | string;\n\n  /**\n   * @inheritDoc\n   */\n  public sampled?: boolean;\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n  public startTimestamp: number;\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  public endTimestamp?: number;\n\n  /**\n   * @inheritDoc\n   */\n  public op?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public description?: string;\n\n  /**\n   * @inheritDoc\n   */\n  public tags: { [key: string]: Primitive };\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any };\n\n  /**\n   * @inheritDoc\n   */\n  public attributes: SpanAttributes;\n\n  /**\n   * List of spans that were finalized\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   */\n  public transaction?: Transaction;\n\n  /**\n   * The instrumenter that created this span.\n   */\n  public instrumenter: Instrumenter;\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   */\n  public origin?: SpanOrigin;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext: SpanContext = {}) {\n    this.traceId = spanContext.traceId || uuid4();\n    this.spanId = spanContext.spanId || uuid4().substring(16);\n    this.startTimestamp = spanContext.startTimestamp || timestampInSeconds();\n    this.tags = spanContext.tags || {};\n    this.data = spanContext.data || {};\n    this.attributes = spanContext.attributes || {};\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n    this.origin = spanContext.origin || 'manual';\n\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.name) {\n      this.description = spanContext.name;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /** An alias for `description` of the Span. */\n  public get name(): string {\n    return this.description || '';\n  }\n  /**\n   * Update the name of the span.\n   */\n  public set name(name: string) {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): Span {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if (DEBUG_BUILD && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setData(key: string, value: any): this {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setAttribute(key: string, value: SpanAttributeValue | undefined): void {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.attributes[key];\n    } else {\n      this.attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n  public setAttributes(attributes: SpanAttributes): void {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatusType): this {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setHttpStatus(httpStatus: number): this {\n    this.setTag('http.status_code', String(httpStatus));\n    this.setData('http.response.status_code', httpStatus);\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setName(name: string): void {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateName(name: string): this {\n    this.description = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isSuccess(): boolean {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n  public finish(endTimestamp?: number): void {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n  public end(endTimestamp?: number): void {\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage as string).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp =\n      typeof endTimestamp === 'number' ? ensureTimestampInSeconds(endTimestamp) : timestampInSeconds();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    return spanToTraceHeader(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTraceContext(): TraceContext {\n    return spanToTraceContext(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data?: { [key: string]: any };\n    description?: string;\n    op?: string;\n    parent_span_id?: string;\n    span_id: string;\n    start_timestamp: number;\n    status?: string;\n    tags?: { [key: string]: Primitive };\n    timestamp?: number;\n    trace_id: string;\n    origin?: SpanOrigin;\n  } {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n      origin: this.origin,\n    });\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n  private _getData():\n    | {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [key: string]: any;\n      }\n    | undefined {\n    const { data, attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n\nexport type SpanStatusType =\n  /** The operation completed successfully. */\n  | 'ok'\n  /** Deadline expired before operation could complete. */\n  | 'deadline_exceeded'\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  | 'unauthenticated'\n  /** 403 Forbidden */\n  | 'permission_denied'\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  | 'not_found'\n  /** 429 Too Many Requests */\n  | 'resource_exhausted'\n  /** Client specified an invalid argument. 4xx. */\n  | 'invalid_argument'\n  /** 501 Not Implemented */\n  | 'unimplemented'\n  /** 503 Service Unavailable */\n  | 'unavailable'\n  /** Other/generic 5xx. */\n  | 'internal_error'\n  /** Unknown. Any non-standard HTTP status code. */\n  | 'unknown_error'\n  /** The operation was cancelled (typically by the user). */\n  | 'cancelled'\n  /** Already exists (409) */\n  | 'already_exists'\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  | 'failed_precondition'\n  /** The operation was aborted, typically due to a concurrency issue. */\n  | 'aborted'\n  /** Operation was attempted past the valid range. */\n  | 'out_of_range'\n  /** Unrecoverable data loss or corruption */\n  | 'data_loss';\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function spanStatusfromHttpCode(httpStatus: number): SpanStatusType {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n"],"names":[],"mappings":"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"}