{"version":3,"file":"applyScopeDataToEvent.js","sources":["../../../src/utils/applyScopeDataToEvent.ts"],"sourcesContent":["import type { Breadcrumb, Event, PropagationContext, ScopeData, Span } from '@sentry/types';\nimport { arrayify } from '@sentry/utils';\nimport { spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata, propagationContext } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata, propagationContext);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergePropOverwrite(data, 'extra', extra);\n  mergePropOverwrite(data, 'tags', tags);\n  mergePropOverwrite(data, 'user', user);\n  mergePropOverwrite(data, 'contexts', contexts);\n  mergePropOverwrite(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merge properties, overwriting existing keys.\n * Exported only for tests.\n */\nexport function mergePropOverwrite<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData | Event,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    data[prop] = { ...data[prop], ...mergeVal };\n  }\n}\n\n/**\n * Merge properties, keeping existing keys.\n * Exported only for tests.\n */\nexport function mergePropKeep<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData | Event,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    data[prop] = { ...mergeVal, ...data[prop] };\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const { extra, tags, user, contexts, level, transactionName } = data;\n\n  if (extra && Object.keys(extra).length) {\n    event.extra = { ...extra, ...event.extra };\n  }\n  if (tags && Object.keys(tags).length) {\n    event.tags = { ...tags, ...event.tags };\n  }\n  if (user && Object.keys(user).length) {\n    event.user = { ...user, ...event.user };\n  }\n  if (contexts && Object.keys(contexts).length) {\n    event.contexts = { ...contexts, ...event.contexts };\n  }\n  if (level) {\n    event.level = level;\n  }\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(\n  event: Event,\n  sdkProcessingMetadata: ScopeData['sdkProcessingMetadata'],\n  propagationContext: PropagationContext,\n): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n    propagationContext: propagationContext,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const transaction = span.transaction;\n  if (transaction) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = transaction.name;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n"],"names":[],"mappings":"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"}