import { Event, EventHint } from '@sentry/types';
interface ExtraErrorDataOptions {
    /**
     * The object depth up to which to capture data on error objects.
     */
    depth: number;
    /**
     * Whether to capture error causes.
     *
     * More information: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause
     */
    captureErrorCause: boolean;
}
/** Extract additional data for from original exceptions. */
export declare const ExtraErrorData: import("@sentry/types").Integration & {
    new (options?: Partial<ExtraErrorDataOptions> | undefined): import("@sentry/types").Integration & {
        name: string;
        processEvent(event: Event, hint: EventHint): Event;
    } & {
        setupOnce: (addGlobalEventProcessor?: ((callback: import("@sentry/types").EventProcessor) => void) | undefined, getCurrentHub?: (() => import("@sentry/types").Hub) | undefined) => void;
    };
    id: string;
};
export {};
//# sourceMappingURL=extraerrordata.d.ts.map
