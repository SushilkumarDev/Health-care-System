import { Event, StackFrame } from '@sentry/types';
type StackFrameIteratee = (frame: StackFrame) => StackFrame;
interface RewriteFramesOptions {
    root?: string;
    prefix?: string;
    iteratee?: StackFrameIteratee;
}
/** Rewrite event frames paths */
export declare const RewriteFrames: import("@sentry/types").Integration & {
    new (options?: RewriteFramesOptions | undefined): import("@sentry/types").Integration & {
        name: string;
        processEvent(originalEvent: Event): Event;
    } & {
        setupOnce: (addGlobalEventProcessor?: ((callback: import("@sentry/types").EventProcessor) => void) | undefined, getCurrentHub?: (() => import("@sentry/types").Hub) | undefined) => void;
    };
    id: string;
};
export {};
//# sourceMappingURL=rewriteframes.d.ts.map
